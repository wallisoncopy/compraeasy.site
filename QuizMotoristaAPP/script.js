
const questions = [
    {
        question: "Qual aplicativo voc√™ trabalha?",
        options: ["üöó Uber", "üöï 99", "üöô InDrive", "üì± Todos"]
    },
    {
        question: "Quantas horas voc√™ trabalha por dia?",
        options: ["‚è∞ Menos de 6 horas", "üïê De 6 a 8 horas", "‚è±Ô∏è Mais de 8 horas"]
    },
    {
        question: "Quantos dias voc√™ trabalha por semana?",
        options: ["üìÖ De 1 a 3 dias", "üóìÔ∏è De 4 a 5 dias", "üìÜ De 6 a 7 dias"]
    },
    {
        question: "Voc√™ anota seus ganhos e despesas atualmente?",
        options: ["‚úçÔ∏è Sim, tudo na ponta da caneta", "üìù S√≥ alguns", "‚ùå N√£o, nunca anotei"]
    },
    {
        question: "Com que frequ√™ncia faz manuten√ß√£o no seu carro?",
        options: ["‚úÖ Sempre em dia", "üîß S√≥ quando quebra", "üò∞ Nem lembro a √∫ltima vez"]
    },
    {
        question: "Quanto voc√™ gasta, em m√©dia, com combust√≠vel por semana?",
        options: ["üí∞ Menos de R$ 250", "üí∏ Entre R$ 250 e R$ 500", "üî• Mais de R$ 500"]
    },
    {
        question: "Voc√™ separa dinheiro para manuten√ß√£o e emerg√™ncias?",
        options: ["üí™ Sim, sempre", "üòÖ Tento, mas nem sempre consigo", "üòî N√£o, nunca sobra"]
    },
    {
        question: "Voc√™ sabe exatamente quanto lucra l√≠quido por m√™s?",
        options: ["üéØ Sim", "ü§î Mais ou menos", "ü§∑‚Äç‚ôÇÔ∏è N√£o fa√ßo ideia"]
    },
    {
        question: "Se voc√™ precisasse trocar um pneu hoje, teria dinheiro reservado?",
        options: ["‚úÖ Sim, sem problemas", "üò¨ Talvez, depende do valor", "üò∞ N√£o, teria que parcelar ou pedir emprestado"]
    },
    {
        question: "Qual desses √© seu maior desafio hoje como motorista de app?",
        options: [
            "üìä Saber se estou lucrando ou tomando preju√≠zo",
            "‚õΩ Controlar gastos como combust√≠vel e manuten√ß√£o",
            "üí∞ Guardar dinheiro todo m√™s",
            "üìã Organizar minhas finan√ßas de forma simples"
        ]
    }
];

let currentQuestion = 0;
let answers = [];

// Elementos DOM
const questionTitle = document.getElementById('questionTitle');
const optionsContainer = document.getElementById('optionsContainer');
const nextBtn = document.getElementById('nextBtn');
const progressFill = document.getElementById('progressFill');
const progressText = document.getElementById('progressText');
const questionContainer = document.getElementById('questionContainer');
const resultContainer = document.getElementById('resultContainer');

// Inicializar quiz
function initQuiz() {
    displayQuestion();
}

// Exibir pergunta atual
function displayQuestion() {
    const question = questions[currentQuestion];
    
    // Atualizar t√≠tulo da pergunta
    questionTitle.textContent = question.question;
    
    // Limpar op√ß√µes anteriores
    optionsContainer.innerHTML = '';
    
    // Criar op√ß√µes
    question.options.forEach((option, index) => {
        const button = document.createElement('button');
        button.className = 'option';
        button.textContent = option;
        button.addEventListener('click', () => selectOption(index, button));
        optionsContainer.appendChild(button);
    });
    
    // Atualizar progresso
    updateProgress();
    
    // Desabilitar bot√£o pr√≥xima
    nextBtn.disabled = true;
}

// Selecionar op√ß√£o
function selectOption(optionIndex, buttonElement) {
    // Remover sele√ß√£o anterior
    document.querySelectorAll('.option').forEach(btn => {
        btn.classList.remove('selected');
    });
    
    // Adicionar sele√ß√£o atual
    buttonElement.classList.add('selected');
    
    // Salvar resposta
    answers[currentQuestion] = optionIndex;
    
    // Habilitar bot√£o pr√≥xima
    nextBtn.disabled = false;
}

// Atualizar barra de progresso
function updateProgress() {
    const progress = ((currentQuestion + 1) / questions.length) * 100;
    progressFill.style.width = progress + '%';
    progressText.textContent = `${currentQuestion + 1} de ${questions.length}`;
}

// Pr√≥xima pergunta
function nextQuestion() {
    currentQuestion++;
    
    if (currentQuestion < questions.length) {
        displayQuestion();
    } else {
        showResult();
    }
}

// Mostrar resultado
function showResult() {
    questionContainer.classList.add('hidden');
    resultContainer.classList.remove('hidden');
    
    // Atualizar progresso para 100%
    progressFill.style.width = '100%';
    progressText.textContent = 'Conclu√≠do';
}

// Event listeners
nextBtn.addEventListener('click', nextQuestion);

// Inicializar quiz quando a p√°gina carregar
document.addEventListener('DOMContentLoaded', initQuiz);
